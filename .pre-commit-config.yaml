# Pre-commit hooks for Stashfi
# Install: pip install pre-commit && pre-commit install

repos:
  # Gitleaks - Secret Detection
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.21.2
    hooks:
      - id: gitleaks
        name: Detect secrets with Gitleaks
        entry: gitleaks detect --verbose --source . --config .gitleaks.toml
        language: golang
        pass_filenames: false

  # Go formatting and linting
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.61.0
    hooks:
      - id: golangci-lint
        name: golangci-lint
        entry: golangci-lint run --fix
        types: [go]
        language: golang
        pass_filenames: false

  # Go mod tidy
  - repo: local
    hooks:
      - id: go-mod-tidy
        name: Go mod tidy
        entry: bash -c 'cd services/api-gateway && go mod tidy'
        language: system
        files: 'services/api-gateway/.*\.go$'
        pass_filenames: false

  # YAML/JSON formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
        args: ['--unsafe']  # Allow custom tags
      - id: check-json
      - id: check-toml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: detect-private-key

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.0
    hooks:
      - id: hadolint
        name: Lint Dockerfiles
        types: [dockerfile]
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Kubernetes/Helm validation
  - repo: local
    hooks:
      - id: validate-k8s
        name: Validate Kubernetes manifests
        entry: bash -c 'find infra/k8s -name "*.yaml" -o -name "*.yml" | xargs -I {} kubeval {} || true'
        language: system
        files: '^infra/k8s/.*\.(yaml|yml)$'
        pass_filenames: false

      - id: helm-lint
        name: Lint Helm charts
        entry: bash -c 'for chart in infra/helm/*/; do helm lint "$chart" || true; done'
        language: system
        files: '^infra/helm/.*'
        pass_filenames: false

  # Security checks
  - repo: local
    hooks:
      - id: check-credentials
        name: Check for hardcoded credentials
        entry: bash -c 'git diff --cached --name-only | xargs -I {} grep -HnE "(password|secret|token|apikey|api_key)\\s*=\\s*[\"'\''][^\"'\'']+[\"'\'']" {} || true'
        language: system
        pass_filenames: false
        types: [text]

      - id: check-env-files
        name: Prevent .env files
        entry: bash -c 'git diff --cached --name-only | grep -E "\.env$" && echo "ERROR: .env files should not be committed" && exit 1 || true'
        language: system
        pass_filenames: false

  # Commit message
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.30.1
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Configuration
default_language_version:
  golang: '1.25.0'

exclude: |
  (?x)^(
    .*\.pb\.go|
    .*\.pb\.gw\.go|
    vendor/.*|
    third_party/.*|
    .*\.git/.*|
    .*\.idea/.*
  )$

fail_fast: false