name: Validate Secrets Configuration

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * MON'  # Weekly check on Monday at 9 AM UTC

permissions:
  contents: read

jobs:
  validate-secrets:
    name: Check Secret Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Check secrets configuration
        env:
          # Map all secrets to env vars for checking
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DEPENDENCY_TRACK_API_KEY: ${{ secrets.DEPENDENCY_TRACK_API_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
          DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }}
        run: |
          echo "## 🔐 Secret Configuration Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Secret | Status | Used In |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|---------|" >> $GITHUB_STEP_SUMMARY

          # Function to check secret
          check_secret() {
            local name=$1
            local usage=$2
            if [ -n "${!name}" ]; then
              echo "| $name | ✅ Configured | $usage |" >> $GITHUB_STEP_SUMMARY
              echo "✅ $name is configured"
            else
              echo "| $name | ❌ Not configured | $usage |" >> $GITHUB_STEP_SUMMARY
              echo "❌ $name is not configured"
            fi
          }

          # Check each secret
          check_secret "SNYK_TOKEN" "Docker vulnerability scanning"
          check_secret "CODECOV_TOKEN" "Code coverage reporting"
          check_secret "SLACK_WEBHOOK_URL" "Release notifications"
          check_secret "DOCKERHUB_USERNAME" "Docker Hub publishing"
          check_secret "DOCKERHUB_TOKEN" "Docker Hub authentication"
          check_secret "DEPENDENCY_TRACK_API_KEY" "SBOM management"
          check_secret "SONAR_TOKEN" "Code quality analysis"
          check_secret "NVD_API_KEY" "Vulnerability database access"
          check_secret "GITLEAKS_LICENSE" "Advanced secret scanning"
          check_secret "DATREE_TOKEN" "K8s policy validation"

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Summary" >> $GITHUB_STEP_SUMMARY

          # Count configured secrets
          CONFIGURED=0
          TOTAL=10

          [ -n "$SNYK_TOKEN" ] && ((CONFIGURED++))
          [ -n "$CODECOV_TOKEN" ] && ((CONFIGURED++))
          [ -n "$SLACK_WEBHOOK_URL" ] && ((CONFIGURED++))
          [ -n "$DOCKERHUB_USERNAME" ] && ((CONFIGURED++))
          [ -n "$DOCKERHUB_TOKEN" ] && ((CONFIGURED++))
          [ -n "$DEPENDENCY_TRACK_API_KEY" ] && ((CONFIGURED++))
          [ -n "$SONAR_TOKEN" ] && ((CONFIGURED++))
          [ -n "$NVD_API_KEY" ] && ((CONFIGURED++))
          [ -n "$GITLEAKS_LICENSE" ] && ((CONFIGURED++))
          [ -n "$DATREE_TOKEN" ] && ((CONFIGURED++))

          echo "- **Configured**: $CONFIGURED/$TOTAL secrets" >> $GITHUB_STEP_SUMMARY
          echo "- **Missing**: $((TOTAL - CONFIGURED)) secrets" >> $GITHUB_STEP_SUMMARY

          if [ $CONFIGURED -eq 0 ]; then
            echo "- **Status**: ⚠️ No optional secrets configured (workflows will use fallbacks)" >> $GITHUB_STEP_SUMMARY
          elif [ $CONFIGURED -lt 5 ]; then
            echo "- **Status**: 🟡 Basic configuration" >> $GITHUB_STEP_SUMMARY
          elif [ $CONFIGURED -lt $TOTAL ]; then
            echo "- **Status**: 🟢 Good configuration" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ✅ Full configuration" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📚 Documentation" >> $GITHUB_STEP_SUMMARY
          echo "See [SECRETS.md](.github/SECRETS.md) for setup instructions." >> $GITHUB_STEP_SUMMARY

      - name: Check workflow functionality
        run: |
          echo ""
          echo "## 🔄 Workflow Impact Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Workflow | Status | Missing Secrets Impact |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|------------------------|" >> $GITHUB_STEP_SUMMARY

          # Docker Build workflow
          if [ -n "$SNYK_TOKEN" ]; then
            echo "| docker-build.yml | ✅ Full | All scans enabled |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| docker-build.yml | 🟡 Partial | Snyk scan skipped, Trivy runs |" >> $GITHUB_STEP_SUMMARY
          fi

          # API Gateway CI workflow
          if [ -n "$CODECOV_TOKEN" ]; then
            echo "| api-gateway-ci.yml | ✅ Full | Coverage uploaded to Codecov |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| api-gateway-ci.yml | 🟡 Partial | Local coverage only |" >> $GITHUB_STEP_SUMMARY
          fi

          # Release workflow
          if [ -n "$DOCKERHUB_USERNAME" ] && [ -n "$DOCKERHUB_TOKEN" ]; then
            echo "| release.yml | ✅ Full | Publishing to Docker Hub |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| release.yml | 🟡 Partial | GHCR only, no Docker Hub |" >> $GITHUB_STEP_SUMMARY
          fi

          # Security scan workflow
          if [ -n "$SONAR_TOKEN" ]; then
            echo "| security-scan.yml | ✅ Enhanced | SonarCloud analysis enabled |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| security-scan.yml | 🟢 Standard | Basic security scans only |" >> $GITHUB_STEP_SUMMARY
          fi

          # K8s validation workflow
          if [ -n "$DATREE_TOKEN" ]; then
            echo "| k8s-validation.yml | ✅ Enhanced | Datree policies enabled |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| k8s-validation.yml | 🟢 Standard | Basic validation only |" >> $GITHUB_STEP_SUMMARY
          fi
