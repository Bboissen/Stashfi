name: CI

on:
  push:
    branches: [ main, feat/* ]
  pull_request:
    branches: [ main ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5.0.0
      - name: Set up Go (for Go hooks)
        uses: actions/setup-go@v6.0.0
        with:
          go-version: '1.25.x'
          cache: true
      - name: Install pre-commit and hook deps
        shell: bash
        run: |
          set -euo pipefail
          python3 -m pip install --upgrade pip
          python3 -m pip install pre-commit
          # Install Go-based tools to GOPATH/bin
          export PATH="$HOME/go/bin:$PATH"
          go install github.com/securego/gosec/v2/cmd/gosec@v2.22.8
          go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.4.0
          go install github.com/zricethezav/gitleaks/v8@v8.28.0
          go install github.com/yannh/kubeconform/cmd/kubeconform@v0.7.0 || true
          # Install hadolint (arch-aware)
          ARCH=$(uname -m)
          case "$ARCH" in
            x86_64|amd64) HADOLINT_URL=https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64 ;;
            aarch64|arm64) HADOLINT_URL=https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-arm64 ;;
            *) HADOLINT_URL= ;;
          esac
          if [ -n "${HADOLINT_URL}" ]; then curl -sSL "$HADOLINT_URL" -o /usr/local/bin/hadolint && chmod +x /usr/local/bin/hadolint; fi
          # Install shellcheck
          sudo apt-get update -y && sudo apt-get install -y shellcheck
          echo "PATH=$HOME/go/bin:$PATH" >> $GITHUB_ENV
      - name: Run pre-commit (all files)
        env:
          PATH: ${{ env.PATH }}
          # Optionally skip k8s/helm checks here since they are covered elsewhere
          SKIP: validate-k8s,helm-lint
        run: pre-commit run --all-files

  api-gateway:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/api-gateway

    steps:
      - uses: actions/checkout@v5.0.0

      - name: Set up Go
        uses: actions/setup-go@v6.0.0
        with:
          go-version: '1.25.x'
          cache: true

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Build
        run: go build -v .

      - name: Lint
        run: |
          go vet ./...
          gofmt -l -d .

  docker-build:
    runs-on: ubuntu-latest
    needs: api-gateway

    steps:
      - uses: actions/checkout@v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Build Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./services/api-gateway
          file: ./services/api-gateway/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: stashfi/api-gateway:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.sha }}
            BUILD_TIME=${{ github.event.head_commit.timestamp }}
            GIT_COMMIT=${{ github.sha }}

  helm-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5.0.0

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.1
        with:
          version: '3.18.6'

      - name: Lint Helm charts
        run: |
          helm version
          helm lint infra/helm/kong
          # Add other charts as they're created
