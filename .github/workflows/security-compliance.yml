name: Security & Compliance

on:
  push:
    branches: [ main, "feat/**" ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  packages: read

jobs:
  # SBOM Generation and CVE Scanning
  sbom-scan:
    name: SBOM & Vulnerability Scan
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          vuln-type: 'os,library'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Generate SBOM with Syft
        uses: anchore/sbom-action@v0.17.2
        with:
          artifact-name: sbom-${{ github.run_id }}
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Scan SBOM with Grype
        id: grype-scan
        uses: anchore/scan-action@v5.2.0
        with:
          sbom: sbom.spdx.json
          severity-cutoff: medium
          fail-build: false
          output-format: sarif

      - name: Upload Grype results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ steps.grype-scan.outputs.sarif }}
          category: grype

  # Dependency scanning
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Go
        uses: actions/setup-go@v6.0.0
        with:
          go-version: '1.25.1'

      - name: Run Nancy (Go dependency check)
        run: |
          go install github.com/sonatype-nexus-community/nancy@v1.0.51
          cd services/api-gateway
          go list -json -deps ./... | nancy sleuth

      - name: Run go mod audit
        run: |
          cd services/api-gateway
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

  # Container scanning (when images are built)
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'
    needs: [sbom-scan]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Build API Gateway image for scanning
        uses: docker/build-push-action@v6.18.0
        with:
          context: ./services/api-gateway
          load: true
          tags: api-gateway:scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy container scan
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: 'api-gateway:scan'
          format: 'sarif'
          output: 'container-trivy.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload container scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'container-trivy.sarif'
          category: container-scan

  # License compliance
  license-check:
    name: License Compliance
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Check Go licenses
        run: |
          go install github.com/google/go-licenses@latest
          cd services/api-gateway
          go-licenses check ./... --disallowed_types=forbidden,restricted || true

  # Secret scanning (in addition to pre-commit)
  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2.3.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
